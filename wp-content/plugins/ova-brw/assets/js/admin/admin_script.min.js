!function(O){"use strict";var h={init:function(){this.ovabrw_datepicker(),this.choosehour(),this.change_pack_type(),this.brw_custom_checkout_taxonomy(),this.brw_create_manuall_order(),this.brw_update_order_status(),this.choosetime_full(),this.date_book(),this.brw_change_deposit(),this.brw_manage_feature_text(),this.brw_add_fixed_time(),this.brw_add_extra_feature(),this.brw_unavailable_time(),this.brw_local_price(),this.brw_manage_resource(),this.brw_manage_service(),this.brw_manage_cus_taxonomy(),this.brw_ui_select_cus_tax(),this.brw_manage_period_time(),this.brw_manage_show_hide_field_at_frontend(),this.brw_manage_globa_discount(),this.brw_manage_special_time(),this.brw_change_rental_type(),this.brw_show_hide_field_edit_product(),this.brw_show_hide_field_edit_category(),this.brw_product_templates(),this.brw_product_map(),this.brw_duration(),this.brw_admin_settings()},ovabrw_datepicker:function(){var i,n,a,_;switch("undefined"!=typeof brw_lang_general_calendar&&O.datetimepicker.setLocale(brw_lang_general_calendar),"undefined"!=typeof brw_disable_week_day&&(i=brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)})),"undefined"!=typeof brw_time_format&&0,n="undefined"!=typeof brw_date_format?brw_date_format:n){case"d-m-Y":n="DD-MM-Y";break;case"m/d/Y":n="MM/DD/Y";break;case"Y/m/d":n="Y/MM/DD";break;case"Y-m-d":n="Y-MM-DD";break;default:n="DD-MM-Y"}a="undefined"!=typeof brw_data_step&&""!=brw_data_step?brw_data_step:30,_="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".ovabrw_rt_date").each(function(){var e={dayOfWeekStart:_,minDate:0,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)}),O(".ovabrw_rt_date.ovabrw_rt_enddate").each(function(){var e={dayOfWeekStart:_,minDate:0,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)}),O(".ovabrw_rt_enddate").on("click",function(){var e=O(this).closest(".row_rt_record").find('input[name="ovabrw_st_startdate[]"]').val(),e={dayOfWeekStart:_,minDate:e||0,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)}),O(".ovabrw_datetimepicker").each(function(){var e=O(this).attr("date_rent_full"),a="",a={scrollInput:!1,dayOfWeekStart:_,minDate:0,disabledWeekDays:i,formatDate:n,format:n,timepicker:!1,disabledDates:a=void 0!==e&&!1!==e?e:a};O(this).datetimepicker(a)}),O(".ovabrw_datetimepicker.ova-date-search").each(function(){var e={dayOfWeekStart:_,minDate:!1,disabledWeekDays:i,format:n,allowTimes:!1,timepicker:!0};O(this).datetimepicker(e)}),O(".ovabrw_datetimepicker.ovabrw_start_date").on("click",function(e){if(O(this).is("[readonly]"))return!1;O(this).data("days"),O(this).data("date-format"),O(this).closest(".sub-item").find('input[id="ovabrw-dropoff-date"]');var a={scrollInput:!1,dayOfWeekStart:_,minDate:0,format:n,formatDate:n,timepicker:!1,autoclose:!0};O(this).datetimepicker(a)}),O(".ovabrw_datetimepicker.ovabrw_end_date").on("click",function(){var e=!1;e=(e=(e=O(this).parent(".rental_item").parent(".sub-item").children(".rental_item").children(".ovabrw_start_date").val())||O(this).parent("td").parent(".tr_petime_discount").children("td").children(".ovabrw_start_date").val())||O(this).closest(".booking_filter").find(".ovabrw_start_date").val();e={dayOfWeekStart:_,minDate:e||0,disabledWeekDays:i,format:n,formatDate:n,allowTimes:!1,timepicker:!1};O(this).datetimepicker(e)}),O('input[name="to_day"]').on("click",function(){O(this).closest(".booking_filter").find('input[name="from_day"]').val();var e={dayOfWeekStart:_,format:n,formatDate:n,allowTimes:!1,timepicker:!1};O(this).datetimepicker(e)}),O(".unavailable_time").each(function(){var e={dayOfWeekStart:_,minDate:0,disabledWeekDays:i,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)}),O(".unavailable_time.end_date").on("click",function(){var e=O(this).closest(".tr_rt_untime").find('input[name="ovabrw_untime_startdate[]"]').val(),e={dayOfWeekStart:_,minDate:e||0,disabledWeekDays:i,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)}),O(".ovabrw_fixed_timepicker").each(function(){var t=O(this),r=t.closest(".ovabrw_metabox_car_rental").find('input[name="ovabrw_number_days"]').val(),o=t.closest(".tr_rt_fixed_time").find('input[name="ovabrw_fixed_time_check_out[]"]'),e={dayOfWeekStart:_,minDate:0,disabledWeekDays:i,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1,onSelectDate:function(e,a){e&&0<o.length&&r&&!t.hasClass("check_out")&&(e=function(e,a){var e=new Date(e),t=e.getDate();t<10&&(t="0"+t);var r=e.getMonth()+1;r<10&&(r="0"+r);var o=e.getFullYear();switch(a){case"DD-MM-Y":return t+"-"+r+"-"+o;case"MM/DD/Y":return r+"/"+t+"/"+o;case"Y/MM/DD":return o+"/"+r+"/"+t;case"Y-MM-DD":return o+"-"+r+"-"+t;default:return t+"-"+r+"-"+o}}(e.setDate(e.getDate()+parseInt(r)-1),n),o.val(e))}};O(this).datetimepicker(e)}),O(".ovabrw_fixed_timepicker.check_out").on("click",function(){var e=O(this).closest(".tr_rt_fixed_time").find('input[name="ovabrw_fixed_time_check_in[]"]').val(),e={dayOfWeekStart:_,minDate:e||0,disabledWeekDays:i,format:n,formatDate:n,step:a,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(e)})},choosehour:function(){var e,a,t;switch("undefined"!=typeof brw_lang_general_calendar&&(e=brw_lang_general_calendar),O.datetimepicker.setLocale(e),t=(t="undefined"!=typeof brw_time_format?brw_time_format:t)||"H:i"){case"H:i":t="HH:mm";break;case"h:i":t="hh:mm";break;case"h:i a":t="hh:mm a";break;case"h:i A":t="hh:mm A";break;case"G:i":t="H:mm";break;case"g:i":t="h:mm";break;case"g:i a":t="h:mm a";break;case"g:i A":t="h:mm A";break;default:t="H:mm"}""==(a="undefined"!=typeof brw_step_time?parseInt(brw_step_time):30)&&(a=30),O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".ovabrw_hour_picker").focus(function(e){O(this).blur()}),O(".ovabrw_hour_picker").each(function(){var e={datepicker:!1,format:t,formatTime:t,step:a};O(this).datetimepicker(e),O(this).closest(".forminp").find(".description").on("click",function(e){e.preventDefault(),O(this).closest(".forminp").find('input[name="ova_brw_booking_before_x_hours_today"]').val("")}),O(this).closest(".ovabrw-product-book-x-hours").find(".remove-x-hours").on("click",function(e){e.preventDefault(),O(this).closest(".ovabrw-product-book-x-hours").find('input[name="ovabrw_book_before_x_hours"]').val("")})})},change_pack_type:function(){O(".row_petime_record").each(function(){O(this).bind("change_package_type",function(){var e,a=O(this).find("select.ovabrw_package_type :selected").val();"inday"==a?(e=O("select#ovabrw_unfixed_time :selected").val(),O(this).find(".ovabrw_petime_days").hide(),O(this).find(".period_times").show(),"yes"!==e?(O(this).find(".period_times").show(),O(this).find(".period_times_unfixed").hide()):(O(this).find(".period_times_unfixed").show(),O(this).find(".period_times").hide())):"other"==a&&(O(this).find(".ovabrw_petime_days").show(),O(this).find(".period_times").hide(),O(this).find(".period_times_unfixed").hide())}),O(this).trigger("change_package_type"),O(this).find("select.ovabrw_package_type").change(function(){O(this).trigger("change_package_type")})})},brw_custom_checkout_taxonomy:function(){var j="Option Value",Q="Option Text",M="Option Price",Y="Add new option",S="Remove option";"undefined"!=typeof label_option_value&&(j=label_option_value),"undefined"!=typeof label_option_text&&(Q=label_option_text),"undefined"!=typeof label_add_new_opt&&(Y=label_add_new_opt),"undefined"!=typeof label_remove_opt&&(S=label_remove_opt);var t="Are you sure ?";"undefined"!=typeof label_are_you_sure&&(t=label_are_you_sure);var o="";o+="<tr>",o+='<td ><input type="text" name="ova_options_key[]" placeholder="'+j+'" /></td>',o+='<td ><input type="text" name="ova_options_text[]" placeholder="'+Q+'" /></td>',o+='<td ><input type="text" name="ova_options_price[]" placeholder="'+M+'" /></td>',o+='<td class="ova-box "><a href="javascript:void(0)" class=" ovabrw_addfield btn btn-blue" title="'+Y+'">+</a></td>',o+='<td class="ova-box "><a href="javascript:void(0)"  class=" ovabrw_remove_row btn btn-red" title="'+S+'">x</a></td>',o+="</tr>",O(document).on("click",".ovabrw_addfield",function(e){var a=O(this).closest("table"),t=a.find("tbody tr").size(),r=(r=O(".ova-wrap-popup-ckf").attr("height"))?parseInt(r)+5:110;O(".ova-wrap-popup-ckf").attr("height",r),O(".ova-wrap-popup-ckf").css("height",r+"vh"),0<t?a.find("tbody tr:last").after(o):a.find("tbody").append(o)}),O(document).on("click",".ovabrw_remove_row",function(e){var a=O(this).closest("table");O(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(o)});var i="";i+="<tr>",i+='<td><input type="text" name="ova_radio_values[]" placeholder="Value" /></td>',i+='<td><input type="text" name="ova_radio_prices[]" placeholder="Price" /></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_radio btn btn-blue" title="Add">+</a></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_radio btn btn-red" title="Remove">x</a></td>',i+="</tr>",jQuery(document).on("click",".ovabrw_add_radio",function(e){var a=jQuery(this).closest("table"),t=a.find("tbody tr").size(),r=(r=jQuery(".ova-wrap-popup-ckf").attr("height"))?parseInt(r)+5:110;jQuery(".ova-wrap-popup-ckf").attr("height",r),jQuery(".ova-wrap-popup-ckf").css("height",r+"vh"),0<t?a.find("tbody tr:last").after(i):a.find("tbody").append(i)}),jQuery(document).on("click",".ovabrw_remove_radio",function(e){var a=jQuery(this).closest("table");jQuery(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(i)});var n="";n+="<tr>",n+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+j+'" /></td>',n+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+Q+'" /></td>',n+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+M+'" /></td>',n+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+Y+'">+</a></td>',n+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+S+'">x</a></td>',n+="</tr>",jQuery(document).on("click",".ovabrw_add_checkbox_option",function(e){var a=jQuery(this).closest("table"),t=a.find("tbody tr").size(),r=(r=jQuery(".ova-wrap-popup-ckf").attr("height"))?parseInt(r)+5:110;jQuery(".ova-wrap-popup-ckf").attr("height",r),jQuery(".ova-wrap-popup-ckf").css("height",r+"vh"),0<t?a.find("tbody tr:last").after(n):a.find("tbody").append(n)}),jQuery(document).on("click",".ovabrw_remove_checkbox_option",function(e){var a=jQuery(this).closest("table");jQuery(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(n)}),O(".ovabrw_edit_field_form").on("click",function(e){var a=O(this).data("data_edit"),t=a.name,r=a.type||"text",o=a.label,i=a.max_file_size,n=a.placeholder,_=a.default,c=a.class,s=a.ova_options_key,d=a.ova_options_text,p=a.ova_options_price,l=a.ova_radio_values,u=a.ova_radio_prices,v=a.ova_checkbox_key,b=a.ova_checkbox_text,f=a.ova_checkbox_price,w=a.slug,m=a.singular_name,h=a.label_frontend,y=a.required,k=a.enabled,a=a.show_listing;"select"==r||"radio"==r||"checkbox"==r||"file"==r?jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),"checkbox"==r?jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),"file"==r?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide());var g="";"select"===r?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),s.forEach(function(e,a){g+="<tr>",g+='<td><input type="text" name="ova_options_key[]" placeholder="'+j+'" value="'+e+'" /></td>',g+='<td><input type="text" name="ova_options_text[]" placeholder="'+Q+'" value="'+d[a]+'" /></td>',p[a]?g+='<td><input type="text" name="ova_options_price[]" placeholder="'+M+'" value="'+p[a]+'" /></td>':g+='<td><input type="text" name="ova_options_price[]" placeholder="'+M+'" value="" /></td>',g+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_addfield btn btn-blue" title="'+Y+'">+</a></td>',g+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+S+'">x</a></td>',g+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").append(g)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none");var x="";"radio"===r?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options").css("display","table-row"),l.forEach(function(e,a){x+="<tr>",x+='<td><input type="text" name="ova_radio_values[]" value="'+e+'" placeholder="Value" /></td>',u[a]?x+='<td><input type="text" name="ova_radio_prices[]" value="'+u[a]+'" placeholder="Price" /></td>':x+='<td><input type="text" name="ova_radio_prices[]" value="" placeholder="Price" /></td>',x+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_radio btn btn-blue" title="Add">+</a></td>',x+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_radio btn btn-red" title="Remove">x</a></td>',x+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options table.ova-sub-table tbody").append(x)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options").css("display","none");var D="";"checkbox"===r?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"),v.forEach(function(e,a){D+="<tr>",D+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+j+'" value="'+e+'" /></td>',D+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+Q+'" value="'+b[a]+'" /></td>',f[a]?D+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+M+'" value="'+f[a]+'" /></td>':D+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+M+'" value="" /></td>',D+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+Y+'">+</a></td>',D+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+S+'">x</a></td>',D+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").append(D)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),O('#ova_popup_field_form input[name="ova_action"]').val("edit"),O('#ova_popup_field_form input[name="ova_old_name"]').val(t),O('#ova_popup_field_form input[name="ova_old_slug"]').val(w),O("#ova_type").val(r),O("#ova_popup_field_form .ova-row-name input").val(t),O("#ova_popup_field_form .ova-row-label input").val(o),jQuery("#ova_popup_field_form .ova-row-file-size input").val(i),O("#ova_popup_field_form .ova-row-placeholder input").val(n),O("#ova_popup_field_form .ova-row-default input").val(_),O("#ova_popup_field_form .ova-row-class input").val(c),O("#ova_popup_field_form .ova-row-slug input").val(w).attr("readonly",!0),O("#ova_popup_field_form .ova-row-sigular-name input").val(m),O("#ova_popup_field_form .ova-row-label-frontend input").val(h),"on"==y?O("#ova_popup_field_form .row-required #ova_required").prop("checked",!0):O("#ova_popup_field_form .row-required #ova_required").prop("checked",!1),"on"==k?O("#ova_popup_field_form .row-required #ova_enable").prop("checked",!0):O("#ova_popup_field_form .row-required #ova_enable").prop("checked",!1),"on"==a?O("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!0):O("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!1),O(".ova-wrap-popup-ckf").css("display","block")}),O("#ovabrw_openform").on("click",function(e){O('#ova_popup_field_form input[name="ova_action"]').val("new"),O('#ova_popup_field_form input[name="ova_old_name"]').val(""),O('#ova_popup_field_form input[name="ova_old_slug"]').val(""),O(".ova-wrap-popup-ckf").css("display","block"),O("#ova_type").val("text"),O('.ova-wrap-popup-ckf input[name="name"]').val(""),O('.ova-wrap-popup-ckf input[name="label"]').val(""),O('.ova-wrap-popup-ckf input[name="placeholder"]').val(""),O('.ova-wrap-popup-ckf input[name="default"]').val(""),O(".ova-wrap-popup-ckf .row-options").css("display","none"),O(".ova-wrap-popup-ckf .row-radio-options").css("display","none"),O(".ova-wrap-popup-ckf .row-checkbox-options").css("display","none"),O('.ova-wrap-popup-ckf input[name="slug"]').val("").removeAttr("readonly"),O(".ova-wrap-popup-ckf .ova-row-placeholder").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-row-default").css("display","table-row"),O('.ova-wrap-popup-ckf input[name="singular_name"]').val(""),O('.ova-wrap-popup-ckf input[name="label_frontend"]').val(""),O(".ova-wrap-popup-ckf #ova_required").attr("checked","checked"),O(".ova-wrap-popup-ckf #ova_enable").attr("checked","checked"),O(".ova-wrap-popup-ckf #show_listing").attr("checked","checked"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide()}),O("#ovabrw_select_all_field").on("click",function(e){var a=O(this).prop("checked");O(".ova-list-checkout-field table tbody tr td.ova-checkbox input").prop("checked",a)}),O("#ovabrw_close_popup").on("click",function(e){O(".ova-wrap-popup-ckf").css("display","none")}),O('input[name="remove"]').on("click",function(e){var a;([a=""]=[t],confirm(a))||e.preventDefault()}),O("#ova_type").on("change",function(){jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-price").css("display","none"),"select"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options").css("display","none")),"radio"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-radio-options").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none")),"checkbox"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row")),"file"==jQuery(this).val()?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"))})},brw_create_manuall_order:function(){h.brw_create_order_change_currency(),h.brw_create_order_button(),h.brw_create_order_country(),h.brw_create_order_change_product(),h.brw_create_order_pickup_date_change(),h.brw_create_order_remove_order_item(),h.brw_create_order_change_adults(),h.brw_create_order_change_adults(),h.brw_create_order_change_childrens(),h.brw_create_order_change_babies(),h.brw_create_order_change_deposit(),h.brw_create_order_change_resources(),h.brw_create_order_change_services(),h.brw_create_order_ckf(),O(".insert_wrap_item").on("click",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".wrap").find(".wrap_item").append(e),h.brw_create_order_change_currency(),h.brw_create_order_button(),h.brw_create_order_country(),h.brw_create_order_change_product(),h.brw_create_order_pickup_date_change(),h.brw_create_order_remove_order_item(),h.brw_create_order_change_adults(),h.brw_create_order_change_adults(),h.brw_create_order_change_childrens(),h.brw_create_order_change_deposit(),h.brw_create_order_change_resources(),h.brw_create_order_change_services(),h.brw_create_order_ckf()})},brw_create_order_change_currency:function(){O('#booking-filter select[name="currency"]').on("change",function(e){e.preventDefault();var a=O(this).closest(".ovabrw-order-currency").find('input[name="ovabrw-admin-url"]').val(),e=new URLSearchParams(window.location.search);e.set("currency",O(this).val()),a&&e.toString()&&(window.location.href=a+"edit.php?"+e.toString())})},brw_create_order_button:function(){O("form#booking-filter .button").on("click",function(c){O(this).closest("form#booking-filter").find(".required").each(function(){if(!O(this).val()){var e=O(this).data("error");return O(this).closest("form#booking-filter").find(".create-order-error").html("").append(e).show(),c.preventDefault(),!1}O(this).closest("form#booking-filter").find(".ajax-error").html("").hide()});var e=O(this).closest("form#booking-filter");e.find('input[type="file"]').each(function(){if(O(this).prop("required")&&!O(this).val()){var e=O(this).data("required");return O(this).closest(".ovabrw-file").find(".ovabrw-file-name").empty().html(e),c.preventDefault(),!1}var a=O(this),t=a.data("max-file-size"),r=a.data("max-file-size-msg"),o=a.data("formats"),i=a.data("file-mimes"),n=[];"object"==typeof i&&O.each(i,function(e,a){n.push(a)}),a.closest(".ovabrw-file").find(".ovabrw-file-name").html("");var _=this.files[0].name,e=this.files[0].size,i=this.files[0].type;if(_&&e&&i)return a.closest(".ovabrw-file").find(".ovabrw-file-name").html(_),t<(e/1048576).toFixed(2)?(a.closest(".ovabrw-file").find(".ovabrw-file-name").html(r),c.preventDefault(),!1):-1==O.inArray(i,n)?(a.closest(".ovabrw-file").find(".ovabrw-file-name").html(o),c.preventDefault(),!1):void 0}),e.find(".ovabrw-ckf-checkbox.ovabrw-required").each(function(){if(!O(this).find('input[type="checkbox"]:checked').val())return O(this).find(".ovabrw-error").show(),c.preventDefault(),!1})})},brw_create_order_change_product:function(){O('.ovabrw-order select[name="ovabrw-data-product[]"]').length&&O('.ovabrw-order select[name="ovabrw-data-product[]"]').select2(),O('.ovabrw-order select[name="ovabrw-data-product[]"]').on("change",function(){var e=O(this),a=e.closest("form#booking-filter").find('select[name="currency"]').val(),w=(e.closest(".ovabrw-order").find(".ovabrw_times_field").remove(),e.closest(".ovabrw-order").find(".ovabrw-fixed-time").remove(),e.parent(".rental_item").parent(".sub-item").parent(".item").find(".loading"));w.css("display","inline-block");var t=e.val(),m=e.parent(".rental_item").parent(".sub-item").parent(".item");e.data("date_format");m.children(".sub-item").find("input").val(""),t?m.children(".sub-item.ovabrw-meta").css("display","block"):m.children(".sub-item.ovabrw-meta").css("display","none"),m.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),m.children(".sub-item").children(".ovabrw-total").css("display","none"),m.children(".sub-item").children(".ovabrw-error").css("display","none"),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_load_data_product_create_order",product_id:t,currency:a},success:function(e){var a=O.parseJSON(e),t=a.adult_price,r=a.children_price,o=a.baby_price,i=a.currency_symbol,n=a.adults_max,_=a.adults_min,c=a.childrens_max,s=a.childrens_min,d=a.babies_max,p=a.babies_min,l=a.days,u=a.amount_insurance,v=(a.stock_quantity,a.html_custom_ckf),b=a.html_resources,f=a.html_services,e=a.html_fixed_time;m.find('input[id="ovabrw-pickup-date"]').attr("data-days",l),m.find('input[id="ovabrw-adult-price"]').val(t),m.find('input[id="ovabrw-children-price"]').val(r),m.find('input[id="ovabrw-baby-price"]').val(o),i&&m.find(".ovabrw-current-currency").html("").append(i),m.find('input[id="ovabrw_adults"]').attr("max",n),m.find('input[id="ovabrw_adults"]').attr("min",_),m.find('input[id="ovabrw_adults"]').val(_),m.find('input[id="ovabrw_childrens"]').attr("max",c),m.find('input[id="ovabrw_childrens"]').attr("min",s),m.find('input[id="ovabrw_childrens"]').val(s),m.find('input[id="ovabrw_babies"]').attr("max",d),m.find('input[id="ovabrw_babies"]').attr("min",p),m.find('input[id="ovabrw_babies"]').val(p),m.find('input[id="ovabrw-amount-insurance"]').val(u),e?(m.children(".sub-item").children(".rental_item.ovabrw-pickup").before(e),m.children(".sub-item").children(".rental_item.ovabrw-pickup").find('input[name="ovabrw_pickup_date[]"]').prop("readonly",!0)):m.children(".sub-item").children(".rental_item.ovabrw-pickup").find('input[name="ovabrw_pickup_date[]"]').prop("readonly",!1),v&&(m.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").empty(),m.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").html(v)),b?(m.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").html(b),m.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","flex")):(m.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),m.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","none")),m.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),f?(m.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").html(f),m.children(".sub-item").children(".rental_item.ovabrw-services").css("display","flex")):(m.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),m.children(".sub-item").children(".rental_item.ovabrw-services").css("display","none")),w.hide(),h.brw_create_order_ckf(),h.ovabrw_datepicker(),e&&h.brw_create_order_change_fixed_time(a.qty_by_guests)}})})},brw_create_order_view_total_cost:function(e){var r=O(e).closest(".item"),o=r.find('select[id="ovabrw-data-product"]').val(),a=r.closest("form#booking-filter").find('select[name="currency"]').val(),t=r.find('input[id="ovabrw-pickup-date"]').val(),i=r.find('input[id="ovabrw-pickup-date"]').val(),n=r.find('input[id="ovabrw_adults"]').val(),_=r.find('input[id="ovabrw_childrens"]').val(),c=r.find('input[id="ovabrw_babies"]').val(),s=r.find('input[id="ovabrw-amount-deposite"]').val(),d=r.find('input[class="ovabrw_time_from"]:checked').val(),p={},l=r.find('input[name="data_custom_ckf"]').data("ckf");l&&O.each(l,function(e,a){var t;"radio"==a.type&&(p[e]=r.find('input[name="'+e+"["+o+']"]:checked').val()),"checkbox"==a.type&&(t=[],r.find('input[name="'+e+"["+o+'][]"]:checked').each(function(){t.push(O(this).val())}),p[e]=t),"select"==a.type&&(p[e]=r.find('select[name="'+e+"["+o+']"]').val())});var u=[];r.find(".resources_order input[type=checkbox]:checked").each(function(){u[O(this).data("resource_key")]=O(this).val()});var e=O.extend({},u),v=[];r.find(".services_order select[name='ovabrw_service["+o+"][]']").each(function(){O(this).val()&&v.push(O(this).val())});l=O.extend({},v);r.find(".ovabrw-error").css("display","none"),r.find(".loading-total").css("display","inline-block"),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_create_order_get_total",product_id:o,currency:a,start_date:t,time_from:d,end_date:i,adults:n,childrens:_,babies:c,deposit_amount:s,custom_ckf:JSON.stringify(p),resources:JSON.stringify(e),services:JSON.stringify(l)},success:function(e){e=O.parseJSON(e);e.error?r.find(".ovabrw-error").show().find(".ovabrw-error-span").html("").append(e.error):(r.find('input[id="ovabrw-adult-price"]').val(e.adults_price),r.find('input[id="ovabrw-children-price"]').val(e.childrens_price),r.find('input[id="ovabrw-baby-price"]').val(e.babies_price),r.find('input[id="ovabrw-amount-insurance"]').val(e.amount_insurance),r.find(".ovabrw-amount-remaining").show().find('input[id="ovabrw-amount-remaining"]').val(e.remaining_amount),r.find(".ovabrw-total").show().find('input[id="ovabrw-total-product"]').val(e.line_total)),r.find(".loading-total").hide()}})},brw_create_order_pickup_date_change:function(){O('.ovabrw-order input[id="ovabrw-pickup-date"]').focus(function(e){e.preventDefault(),O(this).is("[readonly]")||O(this).val(""),O(this).blur()}),O('.ovabrw-order input[id="ovabrw-pickup-date"]').on("change",function(){var a,t,r,e,o,i,n=O(this);n.val()&&!O(this).is("[readonly]")&&(a=n.closest(".ovabrw-order"),t=a.find(".ovabrw-pickup"),a.find(".ovabrw_times_field").remove(),r=a.find('input[name="ovabrw_pickoff_date[]"]'),e=a.find('select[name="ovabrw-data-product[]"]').val(),o=a.find(".loading-total"),i=n.closest("form#booking-filter").find(".create-order-error"),o.css("display","inline-block"),i.html("").hide(),r.val(""),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_create_order_show_time",product_id:e,pickup_date:n.val()},success:function(e){e&&("error"in(e=JSON.parse(e))?(i.html("").append(e.error).show(),a.closest("#booking-filter").find("button.button").prop("disabled",!0)):(a.closest("#booking-filter").find("button.button").prop("disabled",!1),"checkout"in e&&r.val(e.checkout),"durration"in e&&t.after(e.durration),h.brw_create_order_duration(),"qty_by_guests"in e&&e.qty_by_guests&&(a.find('input[name="ovabrw_adults[]"]').attr("max",e.max_adults),a.find('input[name="ovabrw_adults[]"]').attr("min",e.min_adults),a.find('input[name="ovabrw_adults[]"]').val(e.val_adults),a.find('input[name="ovabrw_childrens[]"]').attr("max",e.max_children),a.find('input[name="ovabrw_childrens[]"]').attr("min",e.min_children),a.find('input[name="ovabrw_childrens[]"]').val(e.val_children),a.find('input[name="ovabrw_babies[]"]').attr("max",e.max_babies),a.find('input[name="ovabrw_babies[]"]').attr("min",e.min_babies),a.find('input[name="ovabrw_babies[]"]').val(e.val_babies)),h.brw_create_order_view_total_cost(n))),o.hide()}}))})},brw_create_order_duration:function(){O(".ovabrw-order .ovabrw_time_from").on("change",function(){var a=O(this),e=a.val(),t=a.closest(".ovabrw-order"),r=t.find('select[name="ovabrw-data-product[]"]').val(),o=t.find('input[name="ovabrw_pickup_date[]"]').val(),i=t.find('input[name="ovabrw_pickoff_date[]"]'),n=t.find(".loading-total"),_=a.closest("form#booking-filter").find(".create-order-error");n.css("display","inline-block"),i.val(""),_.html("").hide(),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_duration_change",time:e,product_id:r,pickup_date:o},success:function(e){e&&("error"in(e=JSON.parse(e))?(_.html("").append(e.error).show(),t.closest("#booking-filter").find("button.button").prop("disabled",!0)):(t.closest("#booking-filter").find("button.button").prop("disabled",!1),"checkout"in e&&(i.val(e.checkout),h.brw_create_order_view_total_cost(a)))),n.hide()}})})},brw_create_order_change_fixed_time:function(d){function e(e){var a,t,r,o,i,n,_,c,s;e&&(a=e.closest(".ovabrw-order"),(i=e.val())&&(_=(n=i.split("|"))[0],c=n[1],a.find('input[name="ovabrw_pickup_date[]"]').val(_),a.find('input[name="ovabrw_pickoff_date[]"]').val(c),d&&_&&c&&(t=a.find(".loading-total"),r=a.find('select[name="ovabrw-data-product[]"]').val(),o=a.find('input[name="ovabrw_pickup_date[]"]').val(),i=a.find('input[name="ovabrw_pickoff_date[]"]').val(),n=a.find('input[name="ovabrw_adults[]"]').val(),_=a.find('input[name="ovabrw_childrens[]"]').val(),c=a.find('input[name="ovabrw_babies[]"]').val(),s=e.closest("form#booking-filter").find(".create-order-error"),t.css("display","inline-block"),s.html("").hide(),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_choose_time",check_in:o,check_out:i,product_id:r,adults:n,children:_,babies:c,quantity:1},success:function(e){e&&("error"in(e=JSON.parse(e))?(a.closest("#booking-filter").find("button.button").prop("disabled",!0),s.html("").append(e.error).show()):(a.closest("#booking-filter").find("button.button").prop("disabled",!1),a.find('input[name="ovabrw_adults[]"]').attr("max",e.max_adults),a.find('input[name="ovabrw_adults[]"]').attr("min",e.min_adults),a.find('input[name="ovabrw_adults[]"]').val(e.val_adults),a.find('input[name="ovabrw_childrens[]"]').attr("max",e.max_children),a.find('input[name="ovabrw_childrens[]"]').attr("min",e.min_children),a.find('input[name="ovabrw_childrens[]"]').val(e.val_children),a.find('input[name="ovabrw_babies[]"]').attr("max",e.max_babies),a.find('input[name="ovabrw_babies[]"]').attr("min",e.min_babies),a.find('input[name="ovabrw_babies[]"]').val(e.val_babies))),t.hide()}})),h.brw_create_order_view_total_cost(e)))}O('select[name="ovabrw-fixed-time"]').each(function(){e(O(this))}),O('select[name="ovabrw-fixed-time"]').on("change",function(){e(O(this))})},brw_create_order_remove_order_item:function(){O(".ovabrw-order").on("click",".delete_order",function(e){e.preventDefault(),O(this).closest(".ovabrw-order").remove()})},brw_create_order_change_adults:function(){O('.ovabrw-order input[id="ovabrw_adults"]').on("change",function(){var e=O(this),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&t&&h.brw_create_order_view_total_cost(e)})},brw_create_order_change_childrens:function(){O('.ovabrw-order input[id="ovabrw_childrens"]').on("change",function(){var e=O(this),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&t&&h.brw_create_order_view_total_cost(e)})},brw_create_order_change_babies:function(){O('.ovabrw-order input[id="ovabrw_babies"]').on("change",function(){var e=O(this),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&t&&h.brw_create_order_view_total_cost(e)})},brw_create_order_change_deposit:function(){O('.ovabrw-order input[id="ovabrw-amount-deposite"]').on("change",function(){var e=O(this),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&t&&h.brw_create_order_view_total_cost(e)})},brw_create_order_country:function(){0<O(".ovabrw_country").length&&O(".ovabrw_country").select2()},brw_create_order_change_resources:function(){O(document).on("change",".resources_order",function(e){var a=O(this),t=a.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),r=a.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&r&&h.brw_create_order_view_total_cost(a)})},brw_create_order_change_services:function(){O(document).on("change",".services_order",function(e){var a=O(this),t=a.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),r=a.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&r&&h.brw_create_order_view_total_cost(a)})},brw_create_order_ckf:function(){O("form#booking-filter .ovabrw-ckf-price").on("change",function(){h.brw_create_order_view_total_cost(O(this))}),O('form#booking-filter .ovabrw-file input[type="file"]').each(function(){O(this).on("change",function(e){e.preventDefault();var a=O(this),t=a.data("max-file-size"),r=a.data("max-file-size-msg"),o=a.data("formats"),i=a.data("file-mimes"),n=[];"object"==typeof i&&O.each(i,function(e,a){n.push(a)}),a.closest(".ovabrw-file").find(".ovabrw-file-name").html("");var _=this.files[0].name,e=this.files[0].size,i=this.files[0].type;_&&e&&i&&(a.closest(".ovabrw-file").find(".ovabrw-file-name").html(_),t<(e/1048576).toFixed(2)&&a.closest(".ovabrw-file").find(".ovabrw-file-name").html(r),-1==O.inArray(i,n)&&a.closest(".ovabrw-file").find(".ovabrw-file-name").html(o))})}),O("form#booking-filter .ovabrw-ckf-checkbox.ovabrw-required").on("change",function(){O(this).find('input[type="checkbox"]:checked').val()?O(this).find(".ovabrw-error").hide():O(this).find(".ovabrw-error").show()})},brw_update_order_status:function(){O(document).on("change",".update_order_status",function(e){var a,t,r,o=O(this).children("option:selected").html(),i=O(this).children("option:selected").val(),o=confirm("Do you want to "+o+" Booking ?"),n=O(this);1==o&&""!=i&&(o=O(this).data("order_id"),a=O(this).children("option:selected").val().replace("wc-",""),t=O(this).closest(".order_status").find(".order-status"),r=O(this).closest(".order_status").find(".order-status span"),O.post(ajaxurl,{action:"update_order_status_woo",order_id:o,new_order_status:i},function(e){"error_permission"===e?alert(n.data("error-per-msg")):"false"===e?alert(n.data("error-update-msg")):(t.attr("class",""),t.addClass("order-status tips status-"+a),r.html(a))})),e.preventDefault()})},choosetime_full:function(){var a,t;switch("undefined"!=typeof brw_date_format&&(a=brw_date_format),t="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,a){case"d-m-Y":a="DD-MM-Y";break;case"m/d/Y":a="MM/DD/Y";break;case"Y/m/d":a="Y/MM/DD";break;case"Y-m-d":a="Y-MM-DD";break;default:a="DD-MM-Y"}O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".datetimepicker_full").each(function(){var e={format:a,dayOfWeekStart:t,minDate:0,changeMonth:!0,changeYear:!0};O(this).datetimepicker(e)})},date_book:function(){O(".date_book").each(function(){var e;switch("undefined"!=typeof brw_date_format&&(e=brw_date_format),a="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,e){case"d-m-Y":e="DD-MM-Y";break;case"m/d/Y":e="MM/DD/Y";break;case"Y/m/d":e="Y/MM/DD";break;case"Y-m-d":e="Y-MM-DD";break;default:e="DD-MM-Y"}O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}});var a={dateFormat:e,dayOfWeekStart:a,changeMonth:!0,changeYear:!0,timepicker:!1,scrollMonth:!1};O(this).datetimepicker(a)})},brw_change_deposit:function(){function r(e,a,t){"percent"==e?t+=" ( % )":t=t+" ( "+a+" )",O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field label").text(t)}"no"===O(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").val()?(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block")),O(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").on("change",function(){"no"===O(this).val()?(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block"))}),O(".ovabrw_metabox_car_rental #ovabrw_type_deposit").each(function(){var e=O(this).val(),a=O(this).data("currency"),t=O(this).data("label");r(e,a,t),O(this).on("change",function(){r(O(this).val(),a,t)})}),O("body").on("change",".woocommerce_order_items input.amount_deposit",function(){var e=O(this).closest("tr.item"),a=O(this).val(),t=O("input.deposit_remaining",e),e=O("input.line_total",e);""!==a&&0<parseFloat(e.val())-parseFloat(a)?t.val(parseFloat(e.val())-parseFloat(a)):t.val("")}).on("change",".woocommerce_order_items input.line_total",function(){var e=O(this).closest("tr.item"),a=O("input.amount_remaining",e),t=O("input.deposit_paid",e),e=O(this).val();""!==t.val()&&0<=parseFloat(e)-parseFloat(t.val())?a.val(parseFloat(e)-parseFloat(t.val())):a.val("")})},brw_change_rental_type:function(){O("body").on("woocommerce-product-type-change",function(e,a,t){"ovabrw_car_rental"==a?(O(".show_if_ovabrw_car_rental").show(),O(".product_data_tabs .general_options").show(),O("ul.product_data_tabs li").removeClass("active"),O("ul.product_data_tabs li.general_options").addClass("active"),O("#shipping_product_data").css("display","none"),O("#general_product_data").css("display","block"),O(" ul.product_data_tabs li.general_tab").addClass("show_if_variable_bulk").show(),O("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),O("#general_product_data .pricing").css("border-bottom","none"),O("ul.product_data_tabs li.inventory_tab").show(),O(".inventory_options").addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._manage_stock_field").addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._sold_individually_field").parent().addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._sold_individually_field").addClass("show_if_variable_bulk").show()):"grouped"==a?(O(".show_if_ovabrw_car_rental").hide(),O(".product_data_tabs .general_options").hide()):(O(".show_if_ovabrw_car_rental").hide(),O("#general_product_data ._regular_price_field label span").hide(),O("#general_product_data ._sale_price_field").show(),O("#general_product_data .sale_price_dates_fields").show(),O("#general_product_data .pricing").css("border-bottom","1px solid #eee"))})},brw_manage_feature_text:function(){O(".ovabrw_features a.insert_rt_feature").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_features").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_feature",function(e){e.preventDefault(),O(this).closest(".tr_rt_feature").remove()}),O(".ovabrw_other_features a.insert_rt_other_feature").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_other_features").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_other_feature",function(e){e.preventDefault(),O(this).closest(".tr_rt_other_feature").remove()})},brw_add_fixed_time:function(){O(".ovabrw_fixed_time a.insert_rt_fixed_time").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_fixed_time").find("tbody").append(e),h.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".delete_fixed_time",function(e){e.preventDefault(),O(this).closest(".tr_rt_fixed_time").remove()})},brw_add_extra_feature:function(){O(".add_extra_features").click(function(e){e.preventDefault(),O(".product_data_tabs li").removeClass("active"),O(".product_data_tabs .attribute_options").addClass("active"),O(".ovabrw_metabox_car_rental").hide(),O("#product_attributes").show()})},brw_unavailable_time:function(){O(".ovabrw_rt_untime a.insert_rt_untime").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_rt_untime").find("tbody").append(e),h.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".delete_untime",function(e){e.preventDefault(),O(this).closest(".tr_rt_untime").remove()})},brw_local_price:function(){O(".ovabrw_local_price a.insert_local_price").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_local_price").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_local_price",function(e){e.preventDefault(),O(this).closest(".tr_rt_local_price").remove()}),O(".ovabrw_local_price ").on("change",'select[name="ovabrw_pickup_location[]"]',function(){var e=O(this);e.val()?(e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!1),e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val("")):e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!0)}),O(".ovabrw_local_price ").on("click",'select[name="ovabrw_dropoff_location[]"]',function(){var a=O(this),t=a.closest(".tr_rt_local_price").find('select[name="ovabrw_pickup_location[]"]'),r=t.val();r?a.prop("disabled",!1):a.prop("disabled",!0);var o=[];O('.ovabrw_local_price select[name="ovabrw_pickup_location[]"]').each(function(e){var a=O(this).not(t).val();r==a&&(a=O(this).closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val(),o.push(a))}),o&&o.forEach(function(e){e&&(e=e.replace(" ","\\ "),a.find("option[value="+e+"]").prop("disabled",!0))})})},brw_manage_resource:function(){O(".ovabrw_resources a.insert_resources").click(function(e){e.preventDefault();var a=O(this).data("row");O(this).closest(".ovabrw_resources").find("tbody").append(a);var t=O(this).closest(".ovabrw_resources").find(".tr_rt_resource");if(0<t.length){var e=t.length-1,a=t.eq(e),r=parseInt(e)+1,o=[];for(t.each(function(){var e=O(this).find('input[name="ovabrw_rs_id[]"]').val();e&&o.push(e)});-1!=O.inArray("resource_id_"+r,o);)r+=1;a.find('input[name="ovabrw_rs_id[]"]').val("resource_id_"+r)}}),O(".ovabrw_metabox_car_rental").on("click",".delete_resource",function(e){e.preventDefault(),O(this).closest(".tr_rt_resource").remove()})},brw_manage_service:function(){O(".ovabrw_metabox_car_rental").on("click",".ovabrw_service .insert_service_group",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_service").find(".wrap_ovabrw_service_group").last().append(e),h.brw_sort_key_service()}),O(document).on("click",".ovabrw_service .insert_service_option",function(e){e.preventDefault();var a=O(this).data("pos"),t=O(this).parent("th").find(".ovabrw_content_service table tbody").html();O(this).closest("table.widefat").find("tbody.wrap_service").append(t);var r=O(this).closest(".ovabrw_service_group").find(".wrap_service .tr_rt_service");if(0<r.length){var e=r.length-1,t=r.eq(e),o=parseInt(e)+1,i=[];for(r.each(function(){var e=O(this).find(".ovabrw_service_key").val();e&&i.push(e)});-1!=O.inArray("service_"+a+"_"+o,i);)o+=1;t.find(".ovabrw_service_key").val("service_"+a+"_"+o)}h.brw_sort_key_service()}),O(".ovabrw_metabox_car_rental").on("click",".delete_service",function(e){e.preventDefault(),O(this).closest(".tr_rt_service").remove(),h.brw_sort_key_service()}),O(".ovabrw_metabox_car_rental").on("click",".delete_service_group",function(e){e.preventDefault(),O(this).closest(".ovabrw_service_group").remove(),h.brw_sort_key_service()})},brw_sort_key_service:function(){var e=0;O(".ovabrw_service_group").each(function(){O(this).attr("data-pos",e),e++});for(var a=0;a<e;a++)O(".ovabrw_service_group").each(function(){O(this).attr("data-pos")==a&&(O(this).find('.wrap_service input[name*="ovabrw_service_id"]').attr("name","ovabrw_service_id["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_name"]').attr("name","ovabrw_service_name["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_adult_price"]').attr("name","ovabrw_service_adult_price["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_children_price"]').attr("name","ovabrw_service_children_price["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_baby_price"]').attr("name","ovabrw_service_baby_price["+a+"][]"),O(this).find('.wrap_service select[name*="ovabrw_service_duration_type"]').attr("name","ovabrw_service_duration_type["+a+"][]"),O(this).find(".insert_service_option").attr("data-pos",a))})},brw_manage_cus_taxonomy:function(){t("loaded"),O("#product_catchecklist input").length&&O("#product_catchecklist input").on("change",function(e){var r=O(this);r.attr("disabled","disabled"),t("changed");var a=function(e){const a=document.querySelectorAll(`input[name="${e}"]:checked`);let t=[];return a.forEach(e=>{t.push(e.value)}),t}("tax_input[product_cat][]");O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_custom_tax_in_cat",checked_tax:a},success:function(e){if(r.removeAttr("disabled"),e){var a=e.split(",");if(a.length)for(var t=0;t<a.length;t++)0<O("#"+a[t]+"div").length&&O("#"+a[t]+"div").show()}}})})},brw_ui_select_cus_tax:function(){0<O(".ovabrw_custom_tax_with_cat").length&&O(".ovabrw_custom_tax_with_cat").select2()},brw_manage_period_time:function(){O(".ovabrw_petime a.insert_petime_record").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_petime .row_petime_record").length,a=a.replace('data-pos=""','data-pos="'+e+'"');O(this).closest(".ovabrw_petime").find("tbody").first().append(a),h.choosehour(),h.change_pack_type()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime",function(e){e.preventDefault(),O(this).closest(".row_petime_record").remove(),h.brw_sort_petime()}),O(".ovabrw_metabox_car_rental").on("click","a.insert_petime_discount",function(e){e.preventDefault();var a=O(this).find(".wrap_petime_discount tbody").html(),e=O(this).closest(".row_petime_record").data("pos"),a=a.replace(/ovabrw_key/g,e);O(this).closest(".ovabrw_petime_discount").find("tbody").first().append(a),h.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime_discount",function(e){e.preventDefault(),O(this).closest(".tr_petime_discount").remove()}),O("#ovabrw_unfixed_time").on("change",function(){"yes"==O("select#ovabrw_unfixed_time :selected").val()?(O(".period_times").hide(),O(".period_times_unfixed").show()):(O(".period_times").show(),O(".period_times_unfixed").hide())})},brw_sort_petime:function(){var e=0;O(".ovabrw_petime .row_petime_record").each(function(){O(this).attr("data-pos",e),e++});for(var a=O(".ovabrw_petime .row_petime_record").length,t=0;t<a;t++)O(".wrap_petime .row_petime_record").each(function(){O(this).attr("data-pos")==t&&(O(this).find("tbody.real .ovabrw_petime_discount_price").attr("name","ovabrw_petime_discount["+t+"][price][]"),O(this).find("tbody.real .ovabrw_petime_discount_start_time").attr("name","ovabrw_petime_discount["+t+"][start_time][]"),O(this).find("tbody.real .ovabrw_petime_discount_end_time").attr("name","ovabrw_petime_discount["+t+"][end_time][]"))})},brw_manage_show_hide_field_at_frontend:function(){"new_form"!=O("#ovabrw_manage_extra_tab").val()&&O(".ovabrw_extra_tab_shortcode_field").css("display","none"),O("#ovabrw_manage_extra_tab").on("change",function(){O(".ovabrw_extra_tab_shortcode_field").css("display","block"),"new_form"!=O(this).val()&&O(".ovabrw_extra_tab_shortcode_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_time_book_start").val()&&O(".ovabrw_product_time_to_book_start_field").css("display","none"),O("#ovabrw_manage_time_book_start").on("change",function(){O(".ovabrw_product_time_to_book_start_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_time_to_book_start_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_time_book_end").val()&&O(".ovabrw_product_time_to_book_end_field").css("display","none"),O("#ovabrw_manage_time_book_end").on("change",function(){O(".ovabrw_product_time_to_book_end_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_time_to_book_end_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_default_hour_start").val()&&O(".ovabrw_product_default_hour_start_field").css("display","none"),O("#ovabrw_manage_default_hour_start").on("change",function(){O(".ovabrw_product_default_hour_start_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_default_hour_start_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_default_hour_end").val()&&O(".ovabrw_product_default_hour_end_field").css("display","none"),O("#ovabrw_manage_default_hour_end").on("change",function(){O(".ovabrw_product_default_hour_end_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_default_hour_end_field").css("display","none")});var e=O("#ovabrw_price_type").children("option:selected").val(),a=O("#ovabrw_define_1_day").children("option:selected").val();"day"==e&&"hotel"==a&&O(".none-day-hotel").css("display","none"),O("#ovabrw_define_1_day").on("change",function(){O(".none-day-hotel").css("display","block"),"hotel"==O(this).val()&&O(".none-day-hotel").css("display","none")}),"new"!==O("#ovabrw_manage_custom_checkout_field").val()&&O(".ovabrw_product_custom_checkout_field_field").css("display","none"),O("#ovabrw_manage_custom_checkout_field").on("change",function(){O(".ovabrw_product_custom_checkout_field_field").css("display","block"),"all"==O(this).val()&&O(".ovabrw_product_custom_checkout_field_field").css("display","none")}),"new"!==O("#ovabrw_label_pickup_date_product").val()&&O(".ovabrw_new_pickup_date_product_field").css("display","none"),O("#ovabrw_label_pickup_date_product").on("change",function(){O(".ovabrw_new_pickup_date_product_field").css("display","block"),"new"!==O(this).val()&&O(".ovabrw_new_pickup_date_product_field").css("display","none")}),"new"!==O("#ovabrw_label_dropoff_date_product").val()&&O(".ovabrw_new_dropoff_date_product_field").css("display","none"),O("#ovabrw_label_dropoff_date_product").on("change",function(){O(".ovabrw_new_dropoff_date_product_field").css("display","block"),"new"!==O(this).val()&&O(".ovabrw_new_dropoff_date_product_field").css("display","none")})},brw_manage_globa_discount:function(){O(".ovabrw_metabox_car_rental").on("click",".ovabrw_global_discount .delete",function(e){e.preventDefault(),O(this).closest(".row_discount").remove()}),O(".ovabrw_global_discount a.insert_discount").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(a=a.replace('<option value="days">Day(s)</option>',"")),O(this).closest(".ovabrw_global_discount").find("tbody").append(a)})},brw_manage_special_time_sort_rt:function(){var e=0;O(".ovabrw_rt .row_rt_record").each(function(){O(this).attr("data-pos",e),e++});for(var a=O(".ovabrw_rt .row_rt_record").length,t=0;t<a;t++)O(".wrap_rt .row_rt_record").each(function(){O(this).attr("data-pos")==t&&(O(this).find("tbody.real .ovabrw_rt_discount_price").attr("name","ovabrw_rt_discount["+t+"][price][]"),O(this).find("tbody.real .ovabrw_rt_discount_duration").attr("name","ovabrw_rt_discount["+t+"][duration][]"),O(this).find("tbody.real .ovabrw_rt_discount_duration_type").attr("name","ovabrw_rt_discount["+t+"][duration_type][]"))})},brw_manage_special_time:function(){O(".ovabrw_rt a.insert_rt_record").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_rt .row_rt_record").length,a=a.replace('data-pos=""','data-pos="'+e+'"'),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price_hour[]" value="" class="ovabrw_rt_price_hour"/>',""):"hour"===e&&(a=a.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price[]" value="" class="ovabrw_rt_price"/>',"")),O(this).closest(".ovabrw_rt").find("tbody").first().append(a),h.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_rt",function(e){e.preventDefault(),O(this).closest(".row_rt_record").remove(),h.brw_manage_special_time_sort_rt()}),O(".ovabrw_metabox_car_rental").on("click","a.insert_rt_discount",function(e){e.preventDefault();var a=O(this).find(".wrap_rt_discount tbody").html(),e=O(this).closest(".row_rt_record").data("pos"),a=a.replace(/ovabrw_key/g,e),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(a=a.replace('<option value="days">Day(s)</option>',"")),O(this).closest(".ovabrw_rt_discount").find("tbody").first().append(a),h.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_discount",function(e){e.preventDefault(),O(this).closest(".tr_rt_discount").remove()})},brw_show_hide_field_edit_product(){O("#product-type").length&&(e(O("#product-type").val()),O("#product-type").on("change",function(){e(O("#product-type").val())}))},brw_show_hide_field_edit_category(){},brw_product_templates(){0<O('select[name="ova_brw_template_elementor_template"]').length&&O('select[name="ova_brw_template_elementor_template"]').select2()},brw_product_map(){var e,a;function t(e){e=e.val();"api"==e&&(O(".ovabrw-gg-map #admin_show_map").show(),O(".ovabrw-gg-map .pac-input_field").show(),O(".ovabrw-gg-map .admin-map-iframe").hide()),"iframe"==e&&(O(".ovabrw-gg-map #admin_show_map").hide(),O(".ovabrw-gg-map .pac-input_field").hide(),O(".ovabrw-gg-map .admin-map-iframe").show())}O.fn.product_map=function(e){e=O.extend({lat:-33.8688,lng:151.2195,zoom:17},e);var a=new google.maps.Map(document.getElementById("admin_show_map"),{center:{lat:e.lat,lng:e.lng},zoom:e.zoom,gestureHandling:"cooperative"}),e=document.getElementById("pac-input"),t=new google.maps.places.Autocomplete(e);t.bindTo("bounds",a),a.controls[google.maps.ControlPosition.TOP_LEFT].push(e);var e=O("#pac-input").val(),r=new google.maps.InfoWindow({content:e}),o=new google.maps.Marker({map:a,position:a.getCenter()});o.addListener("click",function(){r.open(a,o)}),t.addListener("place_changed",function(){r.close();var e=t.getPlace();O("#map_info #ovabrw_address").val(O("input#pac-input").val()),e.geometry&&(e.geometry.viewport?a.fitBounds(e.geometry.viewport):(a.setCenter(e.geometry.location),a.setZoom(17)),o.setPlace({placeId:e.place_id,location:e.geometry.location}),o.setVisible(!0),O("#infowindow-content #place-name").val(e.name),O("#map_info #ovabrw_address").val(e.formatted_address),O("#map_info #ovabrw_latitude").val(e.geometry.location.lat()),O("#map_info #ovabrw_longitude").val(e.geometry.location.lng()),r.setContent(e.formatted_address),r.open(a,o))})},"undefined"!=typeof google&&0<O("#admin_show_map").length&&(e=parseFloat(O("input#ovabrw_latitude").val()),a=parseFloat(O("input#ovabrw_longitude").val()),O("#admin_show_map").product_map({lat:e,lng:a,zoom:17})),t(O(".ovabrw-map-type").find('input[name="map_type"]:checked')),O(".ovabrw-map-type").find('input[name="map_type"]').on("change",function(){t(O(this))})},brw_duration(){var e=O(".ovabrw_metabox_car_rental"),a=O('.ovabrw_metabox_car_rental .ovabrw_duration_field input[name="ovabrw_duration_checkbox"]');function t(){e.find(".ovabrw_number_days_field").hide(),e.find(".ovabrw_fixed_time_field").hide(),e.find(".ovabrw_number_hours_field").show(),e.find(".ovabrw_schedule").show()}function r(){e.find(".ovabrw_number_days_field").show(),e.find(".ovabrw_fixed_time_field").show(),e.find(".ovabrw_number_hours_field").hide(),e.find(".ovabrw_schedule").hide()}(a.is(":checked")?t:r)(),a.on("change",function(){var e=O(this);e.is(":checked")?(e.val("1"),t()):(e.val(""),r())}),e.find(".ovabrw_schedule a.insert_time").on("click",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_daily_time").find("tbody").append(e),h.choosehour()}),e.find(".ovabrw_schedule").on("click",".remove_time",function(e){e.preventDefault(),O(this).closest("tr").remove()})},brw_admin_settings(){function e(e){var a;e&&(a=e.closest("tbody").find('select[name="ova_brw_request_booking_order_status"]'),"yes"==e.val()?a.closest("tr").show():a.closest("tr").hide())}function a(){var e=O('select[name="ova_brw_recapcha_enable"]').val(),a=O('select[name="ova_brw_recapcha_form"]'),t=O('select[name="ova_brw_recapcha_type"]'),r=O('input[name="ova_brw_recapcha_v3_site_key"]'),o=O('input[name="ova_brw_recapcha_v2_site_key"]');"yes"===e?(a.closest("tr").show(),t.closest("tr").show(),"v3"===t.val()?(r.closest("table.form-table").show(),r.closest("table.form-table").prev("h2").show(),o.closest("table.form-table").hide(),o.closest("table.form-table").prev("h2").hide()):(r.closest("table.form-table").hide(),r.closest("table.form-table").prev("h2").hide(),o.closest("table.form-table").show(),o.closest("table.form-table").prev("h2").show())):(a.closest("tr").hide(),t.closest("tr").hide(),r.closest("table.form-table").hide(),r.closest("table.form-table").prev("h2").hide(),o.closest("table.form-table").hide(),o.closest("table.form-table").prev("h2").hide())}O('select[name="ova_brw_request_booking_create_order"]').each(function(){e(O(this)),O(this).on("change",function(){e(O(this))})}),O('.ovabrw_destination_field select[name="ovabrw_destination[]"]').select2({allowClear:!0}),a(),O('select[name="ova_brw_recapcha_enable"]').on("change",function(){a()}),O('select[name="ova_brw_recapcha_type"]').on("change",function(){a()})}};function e(e){"ovabrw_car_rental"==e&&(O("#general_product_data .pricing").css("border-bottom","none"),O("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),O("#general_product_data ._regular_price_field").show(),O("#general_product_data ._sale_price_field").show())}function t(e){if("loaded"==e){if("undefined"!=typeof cus_tax_hide_p_loaded)for(var a=cus_tax_hide_p_loaded.split(","),t=0;t<a.length;t++)O("#"+a[t]+"div").length&&O("#"+a[t]+"div").hide()}else if("changed"==e&&"undefined"!=typeof all_cus_tax)for(a=all_cus_tax.split(","),t=0;t<a.length;t++)O("#"+a[t]+"div").length&&O("#"+a[t]+"div").hide()}O(document).ready(function(){h.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,