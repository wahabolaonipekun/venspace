!function(S){"use strict";var f={init:function(){this.brw_datepicker(),this.submit_button(),this.ova_collapsed(),this.ova_ajax_show_total(),this.ova_ajax_show_total_after_load(),this.ova_guestspicker(),this.ova_search_ajax(),this.ova_choose_time(),this.ova_duration(),this.ova_deposit(),this.ova_remove_from_cart()},brw_datepicker:function(){var r=0,r="undefined"!=typeof brw_first_day?brw_first_day:S(".ovabrw_datetimepicker").data("firstday");"undefined"!=typeof brw_lang_general_calendar&&S.datetimepicker.setLocale(brw_lang_general_calendar);var i="";"undefined"!=typeof brw_disable_week_day&&(i=brw_disable_week_day.split(",").map(function(a){return parseInt(a,10)}));var o="d-m-Y";switch(o="undefined"!=typeof brw_date_format?brw_date_format:o){case"d-m-Y":o="DD-MM-Y";break;case"m/d/Y":o="MM/DD/Y";break;case"Y/m/d":o="Y/MM/DD";break;case"Y-m-d":o="Y-MM-DD";break;default:o="DD-MM-Y"}var a,t,n,s=new Date;"undefined"!=typeof brw_next_year&&(a=brw_next_year)&&(t=s.getFullYear(),n=parseInt(t)+parseInt(a)),S.datetimepicker.setDateFormatter({parseDate:function(a,e){e=moment(a,e);return!!e.isValid()&&e.toDate()},formatDate:function(a,e){return moment(a).format(e)}}),S(".ovabrw_datetimepicker").each(function(){var a=[],e=S(this).data("order-time");e&&(a=e);e=S(this).data("disable-week-day");e&&(i=e.toString().split(",").map(function(a){return parseInt(a,10)})),"readonly"!=S(this).data("readonly")&&(a={scrollInput:!1,dayOfWeekStart:r,minDate:s,disabledWeekDays:i,disabledDates:a,format:o,formatDate:o,timepicker:!1,autoclose:!0},t&&(a.yearStart=t),n&&(a.yearEnd=n),S(this).datetimepicker(a))}),S(".ovabrw_datetimepicker.ovabrw_start_date").focus(function(a){S(this).blur()}),S(".ovabrw_end_date").focus(function(){S(this).blur()}),S(".ovabrw_datetimepicker.ovabrw_start_date").on("click",function(a){var e=[],t=S(this).data("order-time");t&&(e=t),"readonly"!=S(this).data("readonly")&&(e={scrollInput:!1,dayOfWeekStart:r,minDate:s,disabledWeekDays:i,disabledDates:e,format:o,formatDate:o,timepicker:!1,autoclose:!0},S(this).datetimepicker(e))});var u="";S('input[name="ovabrw_pickup_date"].ovabrw_datetimepicker').on("change",function(){var e,t,r,i,a,o,n,s,d,l,c=S(this);c.val()&&c.val()!=u&&(u=c.val(),e=c.closest("form"),t=e.find(".ovabrw_checkin_field"),e.find(".ovabrw_times_field").remove(),r=e.find(".ovabrw_end_date"),i=e.find(".ovabrw-date-loading"),a=e.find('input[name="product_id"]').val(),o=e.find('input[name="ovabrw_adults"]').val(),n=e.find('input[name="ovabrw_childrens"]').val(),s=e.find('input[name="ovabrw_babies"]').val(),d=e.find('input[name="ovabrw_quantity"]').val(),l=e.find(".ajax-show-total .ajax-error"),i.show(),l.html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_show_time",product_id:a,adults:o,children:n,babies:s,quantity:d,pickup_date:c.val()},success:function(a){a&&("error"in(a=JSON.parse(a))?(e.find("button.booking-form-submit").prop("disabled",!0),l.html("").append(a.error).show()):(e.find("button.booking-form-submit").prop("disabled",!1),"checkout"in a&&r.val(a.checkout),"durration"in a&&t.after(a.durration),f.ova_duration(),"qty_by_guests"in a&&a.qty_by_guests&&(e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("max",a.max_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("min",a.min_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').val(a.val_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("max",a.max_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("min",a.min_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').val(a.val_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("max",a.max_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("min",a.min_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').val(a.val_babies),f.ova_guests_calculate(e)),e.hasClass("booking-form")&&f.ova_ajax_show_total_after_load(e))),i.hide()}}))});var p="";S('input[name="ovabrw_request_pickup_date"].ovabrw_datetimepicker').on("change",function(){var e,t,r,i,a,o,n,s,d,l,c=S(this);c.val()&&c.val()!=p&&(p=c.val(),e=c.closest("form"),t=e.find(".ovabrw_checkin_field"),e.find(".ovabrw_times_field").remove(),r=e.find(".ovabrw_end_date"),i=e.find(".ovabrw-date-loading"),a=e.find('input[name="product_id"]').val(),o=e.find('input[name="ovabrw_adults"]').val(),n=e.find('input[name="ovabrw_childrens"]').val(),s=e.find('input[name="ovabrw_babies"]').val(),d=e.find('input[name="ovabrw_quantity"]').val(),l=e.find(".ajax-error"),i.show(),l.html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_show_time",product_id:a,adults:o,children:n,babies:s,quantity:d,pickup_date:c.val()},success:function(a){a&&("error"in(a=JSON.parse(a))?(e.find("button.request-form-submit").prop("disabled",!0),l.html("").append(a.error).show()):(e.find("button.request-form-submit").prop("disabled",!1),"checkout"in a&&r.val(a.checkout),"durration"in a&&t.after(a.durration),f.ova_duration(),"qty_by_guests"in a&&a.qty_by_guests&&(e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("max",a.max_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("min",a.min_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').val(a.val_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("max",a.max_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("min",a.min_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').val(a.val_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("max",a.max_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("min",a.min_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').val(a.val_babies),f.ova_guests_calculate(e)),e.hasClass("request-form")&&f.ova_check_max_guests(e))),i.hide()}}))})},ova_duration:function(){S('form input[name="ovabrw_time_from"]').on("change",function(){var a=S(this),e=a.closest("form"),t=a.val(),r=e.find('input[name="product_id"]').val(),i=e.find("input.ovabrw_start_date").val(),o=e.find("input.ovabrw_end_date"),n=e.find(".ovabrw_checkout_field .ovabrw-date-loading"),s=e.find('input[name="ovabrw_adults"]').val(),d=e.find('input[name="ovabrw_childrens"]').val(),l=e.find('input[name="ovabrw_babies"]').val(),a=e.find('input[name="ovabrw_quantity"]').val(),c=e.find(".ajax-show-total .ajax-error");n.show(),o.val(""),c.html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_duration_change",time:t,product_id:r,adults:s,children:d,babies:l,quantity:a,pickup_date:i},success:function(a){a&&("error"in(a=JSON.parse(a))?(e.hasClass("booking-form")&&e.find("button.booking-form-submit").prop("disabled",!0),e.hasClass("request-form")&&e.find("button.request-form-submit").prop("disabled",!0),c.html("").append(a.error).show()):(e.hasClass("booking-form")&&e.find("button.booking-form-submit").prop("disabled",!1),e.hasClass("request-form")&&e.find("button.request-form-submit").prop("disabled",!1),"checkout"in a&&o.val(a.checkout),"qty_by_guests"in a&&a.qty_by_guests&&(e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("max",a.max_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("min",a.min_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').val(a.val_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("max",a.max_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("min",a.min_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').val(a.val_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("max",a.max_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("min",a.min_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').val(a.val_babies),f.ova_guests_calculate(e)),e.hasClass("booking-form")&&f.ova_ajax_show_total_after_load(e),e.hasClass("request-form")&&f.ova_check_max_guests(e))),n.hide()}})})},ova_guests_calculate:function(a=null){var e,t,r;a&&(e=a.find(".ovabrw-guestspicker .gueststotal"),t=a.find('input[name="ovabrw_adults"]'),r=a.find('input[name="ovabrw_childrens"]'),a=a.find('input[name="ovabrw_babies"]'),void 0!==(t=t.val())&&t||(t=0),void 0!==(r=r.val())&&r||(r=0),void 0!==(a=a.val())&&a||(a=0),e&&e.text(parseInt(t)+parseInt(r)+parseInt(a)))},ova_check_max_guests:function(e=null){var a,t,r,i,o,n;e&&(a=e.find('input[name="product_id"]').val(),t=e.find('input[name="ovabrw_adults"]').val(),r=e.find('input[name="ovabrw_childrens"]').val(),i=e.find('input[name="ovabrw_babies"]').val(),o=e.find(".ovabrw-date-loading"),n=e.find(".ajax-error"),o.show(),n.html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_check_max_guests",product_id:a,adults:t,children:r,babies:i},success:function(a){a&&("error"in(a=JSON.parse(a))?(e.hasClass("request-form")&&e.find("button.request-form-submit").prop("disabled",!0),n.html("").append(a.error).show()):e.hasClass("request-form")&&e.find("button.request-form-submit").prop("disabled",!1)),o.hide()}}))},submit_button:function(){S(".ovabrw_btn_submit").on("click",function(a){var e=S(this).closest(".ovabrw_search").data("mesg_required"),t=!0;if(S(this).closest(".ovabrw_search").find(".content .wrap-error").empty(),S(this).closest(".form_ovabrw").find(".required").each(function(){S(this).val()||(t=!1,S(this).parent(".content").children(".wrap-error").append('<p class="error">'+e+"</p>"))}),!t)return a.preventDefault(),!1}),S("form.booking-form button.booking-form-submit").on("click",function(a){var e=S(this);e.addClass("disabled"),e.find(".ovabrw-submit-loading").show();var t=!0;if(e.closest(".ova-booking-form").find(".required").each(function(){if(!S(this).val()){var a=S(this).data("error");return S(this).closest("form.booking-form").find(".ajax-error").html("").append(a).show(),t=!1}var e=S(this).attr("type");if("checkbox"==e&&!S(this).closest(".rental_item").find("input:checked").val()){a=S(this).closest(".ovabrw-checkbox").data("error");return S(this).closest("form.booking-form").find(".ajax-error").html("").append(a).show(),t=!1}}),!t)return e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide(),!1;var r=e.closest("form.booking-form").find("#ovabrw-recaptcha-booking-token");if(t&&0<r.length){var i=r.val();return i?(e.addClass("disabled"),e.find(".ovabrw-submit-loading").show(),e.closest(".ova-booking-form").find(".ajax-error").html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_verify_reCAPTCHA",token:i},success:function(a){a?(e.closest("form.booking-form").find(".ajax-error").html("").append(a).show(),e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide()):e.closest("form.booking-form").submit()}})):(r=r.attr("data-mess"),e.closest("form.booking-form").find(".ajax-error").html("").append(r).show(),e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide()),!1}}),S("form.request-form button.request-form-submit").on("click",function(a){var e=S(this);e.addClass("disabled"),e.find(".ovabrw-submit-loading").show();var t=!0;if(e.closest(".ova-request-form").find(".required").each(function(){if(!S(this).val()){var a=S(this).data("error");return S(this).closest("form.request-form").find(".ajax-error").html("").append(a).show(),t=!1}var e=S(this).attr("type");if("checkbox"==e&&!S(this).closest(".rental_item").find("input:checked").val()){a=S(this).closest(".ovabrw-checkbox").data("error");return S(this).closest("form.request-form").find(".ajax-error").html("").append(a).show(),t=!1}}),!t)return e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide(),!1;var r=e.closest("form.request-form").find("#ovabrw-recaptcha-enquiry-token");if(t&&0<r.length){var i=r.val();return i?(e.addClass("disabled"),e.find(".ovabrw-submit-loading").show(),e.closest("form.request-form").find(".ajax-error").html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_verify_reCAPTCHA",token:i},success:function(a){a?(e.closest("form.request-form").find(".ajax-error").html("").append(a).show(),e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide()):e.closest("form.request-form").submit()}})):(r=r.attr("data-mess"),e.closest("form.request-form").find(".ajax-error").html("").append(r).show(),e.removeClass("disabled"),e.find(".ovabrw-submit-loading").hide()),!1}}),S('.ovabrw-file input[type="file"]').each(function(){S(this).on("change",function(a){a.preventDefault();var e=S(this),t=e.data("max-file-size"),r=e.data("max-file-size-msg"),i=e.data("formats"),o=e.data("file-mimes"),n=[];"object"==typeof o&&S.each(o,function(a,e){n.push(e)}),e.closest(".ovabrw-file").find(".ovabrw-file-name").html("");var s=this.files[0].name,a=this.files[0].size,o=this.files[0].type;s&&a&&o&&(e.closest(".ovabrw-file").find(".ovabrw-file-name").html(s),t<(a/1048576).toFixed(2)&&e.closest(".ovabrw-file").find(".ovabrw-file-name").html(r),-1==S.inArray(o,n)&&e.closest(".ovabrw-file").find(".ovabrw-file-name").html(i))})})},ova_collapsed:function(){S(".ovabrw-according").off().on("click",function(a){a.preventDefault(),S(this).siblings(".ovabrw_collapse_content").slideToggle()}),S(".ovabrw_open_popup").off().on("click",function(a){a.preventDefault(),S(this).siblings(".popup").css("display","block")}),S(".popup-close").on("click",function(a){a.preventDefault(),S(this).parent(".popup-inner").parent(".popup").css("display","none")}),S(".popup-close-2").on("click",function(a){a.preventDefault(),S(this).parent(".close_discount").parent(".popup-inner").parent(".popup").css("display","none")})},ova_ajax_show_total:function(){S("body").on("change","form.booking-form",function(){S(this).find('input[name="qty-by-guests"]').val()&&(S(this).find('input[name="ovabrw_pickup_date"]').on("change",function(a){return!1}),S(this).find('input[name="ovabrw_pickoff_date"]').on("change",function(a){return!1}),S(this).find('input[name="ovabrw_time_from"]').on("change",function(){return!1})),f.ova_ajax_show_total_after_load(S(this))}),S("form.booking-form").each(function(){var a=S(this),e=a.find('input[name="ovabrw_pickup_date"]').val();a.find('input[name="ovabrw_pickoff_date"]').val();e&&(S(".ovabrw_datetimepicker.ovabrw_start_date").blur(),f.ova_ajax_show_total_after_load(a))})},ova_ajax_show_total_after_load:function(r=null){var t,i,o,n,s,d,l,c,u,p,f,v=[],b=[],m={};null!=r&&(r.find('input[name="product_id"]').val()&&(c=r.find('input[name="product_id"]').val()),(t=r.find('input[name="ovabrw_pickup_date"]').val()?r.find('input[name="ovabrw_pickup_date"]').val():t)&&setTimeout(function(){var a,e;r.find('input[name="ovabrw_time_from"]:checked')&&(i=r.find('input[name="ovabrw_time_from"]:checked').val()),r.find('input[name="ovabrw_pickoff_date"]').val()&&(o=r.find('input[name="ovabrw_pickoff_date"]').val()),r.find('input[name="ovabrw_adults"]').val()&&(n=r.find('input[name="ovabrw_adults"]').val()),r.find('input[name="ovabrw_childrens"]').val()&&(s=r.find('input[name="ovabrw_childrens"]').val()),r.find('input[name="ovabrw_babies"]').val()&&(d=r.find('input[name="ovabrw_babies"]').val()),r.find('input[name="ovabrw_quantity"]').val()&&(l=r.find('input[name="ovabrw_quantity"]').val()),r.find('input[name="ova_type_deposit"]:checked').val()&&(u=r.find('input[name="ova_type_deposit"]:checked').val()),!r.find('input[name="data_custom_ckf"]')||(a=r.find('input[name="data_custom_ckf"]').data("ckf"))&&S.each(a,function(a,e){var t;"radio"==e.type&&(m[a]=r.find('input[name="'+a+'"]:checked').val()),"checkbox"==e.type&&(t=[],r.find(".ovabrw-checkbox input[type=checkbox]:checked").each(function(){t.push(S(this).val())}),m[a]=t),"select"==e.type&&(m[a]=r.find('select[name="'+a+'"]').val())}),r.find(".ovabrw-resources input[type=checkbox]:checked").each(function(){v[S(this).data("rs-key")]=S(this).val()}),p=S.extend({},v),r.find("select[name='ovabrw_service[]']").each(function(){S(this).val()&&b.push(S(this).val())}),f=S.extend({},b),t&&o&&(e=r.find(".ajax-show-total .ajax-loading-total").show(),r.find(".ajax-show-total .ajax-error").html("").hide(),r.find(".ajax-show-total .show-availables-number").html(""),r.find(".ajax-show-total .show-amount-insurance").html(""),r.find(".ajax-show-total .show-total-number").html(""),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_calculate_total",product_id:c,pickup_date:t,time_from:i,dropoff_date:o,adults:n,childrens:s,babies:d,quantity:l,deposit:u,resources:JSON.stringify(p),services:JSON.stringify(f),custom_ckf:JSON.stringify(m)},success:function(a){a=JSON.parse(a);a&&(a.error?(r.find("button.booking-form-submit").prop("disabled",!0),r.find(".ajax-show-total .ovabrw-show-amount").css("display","none"),r.find(".ajax-show-total .ovabrw-ajax-amount-insurance").hide(),r.find(".ajax-show-total .ajax-error").html("").append(a.error).show()):(r.find("button.booking-form-submit").prop("disabled",!1),a.adults_price&&r.find(".ovabrw-wrapper-guestspicker .adults-price").html("").append(a.adults_price),a.childrens_price&&r.find(".ovabrw-wrapper-guestspicker .childrens-price").html("").append(a.childrens_price),a.babies_price&&r.find(".ovabrw-wrapper-guestspicker .babies-price").html("").append(a.babies_price),r.find(".ajax-show-total .ovabrw-show-amount").css("display","flex"),"qty_by_guests"in a&&a.qty_by_guests?r.find(".ajax-show-total .ovabrw-ajax-availables").css("display","none"):r.find(".ajax-show-total .show-availables-number").html("").append(a.quantity_available),r.find(".ajax-show-total .show-amount-insurance").html("").append(a.amount_insurance),r.find(".ajax-show-total .show-total-number").html("").append(a.line_total),r.find(".ajax-show-total .ovabrw-ajax-amount-insurance").show()),e.hide())}}))},300))},ova_search_ajax:function(){function D(a){a.find(".btn-video").each(function(){S(this).on("click",function(){var e=S(this).closest(".ova-video-gallery").find(".video-container"),a=S(this).closest(".ova-video-gallery").find(".ovaicon-cancel"),t=S(this).closest(".ova-video-gallery").find(".modal-video"),r=function(a){a=a.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/);return a&&11==a[2].length?a[2]:"error"}(S(this).data("src")),i=S(this).data("controls"),o="?";o+="yes"==i.autoplay?"autoplay=1":"autoplay=0",o+="yes"==i.mute?"&mute=1":"&mute=0",o+="yes"==i.loop?"&loop=1":"&loop=0",o+="yes"==i.controls?"&controls=1":"&controls=0",o+="yes"==i.rel?"&rel=1":"&rel=0",o+="yes"==i.modest?"&modestbranding=1":"&modestbranding=0","error"!=r&&(t.attr("src","https://www.youtube.com/embed/"+r+(o+="&playlist="+r)),e.css("display","flex")),a.on("click",function(){e.hide(),t.removeAttr("src")}),S(window).click(function(a){"video-container"==a.target.className&&(e.hide(),t.removeAttr("src"))})})})}function d(a=null){var e=S(document).find(".ovabrw-search-ajax .wrap-search-ajax"),t=e.find(".filter-layout-active").attr("data-layout"),r=e.data("grid_column"),i=e.data("thumbnail-type"),o=e.find("#brw-destinations-select-box :selected").val(),n=[],s=[];e.find(".brw_custom_taxonomy_dropdown").each(function(a){var e=S(this).attr("name"),t=S(this).val();n[a]=e,s[a]=t});var d=e.find('input[name="ovabrw_pickup_date"]').val(),l=e.find('input[name="ovabrw_adults"]').val(),c=e.find('input[name="ovabrw_childrens"]').val(),u=e.find('input[name="ovabrw_babies"]').val(),p=e.find(".brw-tour-price-from").val(),f=e.find(".brw-tour-price-to").val(),v=[],b=[],m=e.find(".duration-filter:checked").val(),_=e.find(".duration-filter:checked").nextAll(".duration-filter-to").val(),h=e.find(".duration-filter:checked").nextAll(".duration-filter-type").val();e.find(".rating-filter:checked").each(function(a){v[a]=S(this).val()}),e.find(".tour-category-filter:checked").each(function(a){b[a]=S(this).val()});var w=e.find(".brw-search-ajax-result"),g=w.data("order"),k=w.data("orderby"),y=w.data("orderby_meta_key"),x=w.data("posts-per-page"),j=w.data("defautl-category"),q=w.data("show-category"),C=w.find(".ovabrw-pagination-ajax .current").attr("data-paged");e.find(".wrap-load-more").show(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_search_ajax",order:g,orderby:k,orderby_meta_key:y,posts_per_page:x,default_category:j,show_category:q,paged:C,layout:t,grid_column:r,thumbnail_type:i,destination:o,custom_taxonomy:n,taxonomy_value:s,start_date:d,adults:l,childrens:c,babies:u,start_price:p,end_price:f,review_score:v,categories:b,duration_from:m,duration_to:_,duration_type:h,clicked:a},success:function(a){a&&(a=JSON.parse(a),a=S(a.result).fadeOut(300).fadeIn(500),w.html(a),null==(a=w.find(".tour_number_results_found").val())&&(a=0),w.closest(".wrap-search-ajax").find(".number-result-tour-found").html("").append(a),e.find(".wrap-load-more").hide(),D(e),e.find(".btn-gallery").on("click",function(){var a=S(this).data("gallery");Fancybox.show(a,{Image:{Panzoom:{zoomFriction:.7,maxScale:function(){return 3}}}})}),S(".ova-gallery-slideshow").each(function(){var a=S(this),e=a.data("options")?a.data("options"):{},t={0:{items:1,nav:!1,slideBy:1},768:{items:2,slideBy:1},1025:{items:3,slideBy:1},1300:{items:e.items}};a.owlCarousel({autoWidth:e.autoWidth,margin:e.margin,items:e.items,loop:e.loop,autoplay:e.autoplay,autoplayTimeout:e.autoplayTimeout,center:e.center,lazyLoad:e.lazyLoad,nav:e.nav,dots:e.dots,autoplayHoverPause:e.autoplayHoverPause,slideBy:e.slideBy,smartSpeed:e.smartSpeed,rtl:e.rtl,navText:['<i aria-hidden="true" class="'+e.nav_left+'"></i>','<i aria-hidden="true" class="'+e.nav_right+'"></i>'],responsive:t}),a.find(".gallery-fancybox").off("click").on("click",function(){var a=S(this).data("index"),e=S(this).closest(".ova-gallery-popup").find(".ova-data-gallery").data("gallery");Fancybox.show(e,{Image:{Panzoom:{zoomFriction:.7,maxScale:function(){return 3}}},startIndex:a})})}))}})}0<S(".ovabrw-search-ajax .wrap-search-ajax").length&&d(),S(".ovabrw-search-ajax .wrap-search-ajax .ovabrw-btn").on("click",function(a){d(!0),S("html, body").animate({scrollTop:S("#brw-search-ajax-result").offset().top-250},500);var e=S(this).closest(".wrap-search-ajax").find(".search-advanced-field-wrapper"),t=e.closest(".ovabrw-search-advanced").find(".search-advanced-input i");e.removeClass("toggled"),t.removeClass("icomoon-chevron-up"),t.addClass("icomoon-chevron-down"),S(this).closest(".wrap-search-ajax").find(".input_select_list").hide(),a.preventDefault()}),S(".ovabrw-search-ajax").on("click",".wrap-search-ajax .filter-layout",function(a){a.preventDefault();var e=S(this),t=S(".wrap-search-ajax .filter-layout-active").attr("data-layout"),r=e.attr("data-layout"),a=e.closest(".wrap-search-ajax").find(".ovabrw-products-result").data("clicked");r!=t&&(S(".wrap-search-ajax .filter-layout").removeClass("filter-layout-active"),e.addClass("filter-layout-active"),a?d(!0):d())}),S(".ovabrw-search-ajax").on("click",".wrap-search-ajax .ovabrw-tour-filter .input_select_list .term_item",function(a){a.preventDefault();var e=S(this),t=e.closest(".filter-sort").find(".input_select_input_value").val(),a=e.closest(".wrap-search-ajax").find(".brw-search-ajax-result"),e=e.closest(".wrap-search-ajax").find(".ovabrw-products-result").data("clicked");"id_desc"==t?(a.data("order","DESC"),a.data("orderby","ID"),a.data("orderby_meta_key","")):"rating_desc"==t?(a.data("order","DESC"),a.data("orderby","meta_value_num"),a.data("orderby_meta_key","_wc_average_rating")):"price_asc"==t?(a.data("order","ASC"),a.data("orderby","meta_value_num"),a.data("orderby_meta_key","_price")):"price_desc"==t&&(a.data("order","DESC"),a.data("orderby","meta_value_num"),a.data("orderby_meta_key","_price")),e?d(!0):d()}),S(document).on("click",".ovabrw-search-ajax .wrap-search-ajax .ovabrw-pagination-ajax .page-numbers",function(a){a.preventDefault();var e=S(this),t=S(".wrap-search-ajax .ovabrw-pagination-ajax .current").attr("data-paged"),r=e.attr("data-paged"),a=e.closest(".brw-search-ajax-result").find(".ovabrw-products-result").data("clicked");t!=r&&(S(window).scrollTop(0),S(".wrap-search-ajax .ovabrw-pagination-ajax .page-numbers").removeClass("current"),e.addClass("current"),a?d(!0):d())}),S(".ovabrw-tour-filter .clear-filter").on("click",function(a){a.preventDefault();var e=S(this),t=e.closest(".wrap-search-ajax"),r=t.data("adults"),i=t.data("childrens"),o=t.data("babies"),n=t.data("sort_by_default"),s=t.data("start-price"),a=t.data("end-price");e.closest(".wrap-search-ajax").find(".ovabrw-pagination-ajax").attr("data-paged",1),t.find("#brw-destinations-select-box, .brw_custom_taxonomy_dropdown").val("all").trigger("change"),t.find('input[name="ovabrw_pickup_date"]').val("").trigger("change"),t.find('input[name="ovabrw_adults"]').val(r),t.find('input[name="ovabrw_childrens"]').val(i),t.find('input[name="ovabrw_babies"]').val(o),void 0!==r&&r||(r=0),void 0!==i&&i||(i=0),void 0!==o&&o||(o=0),t.find(".ovabrw-guestspicker .gueststotal").html(r+i+o),t.find(".search-advanced-field-wrapper input:checkbox, .search-advanced-field-wrapper input:radio").removeAttr("checked"),t.find(".brw-tour-price-from").val(s),t.find(".brw-tour-price-to").val(a),t.find("#brw-tour-price-slider .ui-slider-range").css({left:"0",width:"100%"}),t.find("#brw-tour-price-slider  span").css("left","100%"),t.find("#brw-tour-price-slider .ui-slider-range + span").css("left","0"),t.find(".input_select_list .term_item ").removeClass("term_item_selected"),t.find('.input_select_list .term_item[data-id="'+n+'"]').addClass("term_item_selected");a=t.find('.input_select_list .term_item[data-id="'+n+'"]').data("value");t.find(".input_select_input").val(a),t.find(".input_select_input_value").val(n);t=t.find(".brw-search-ajax-result");"id_desc"==n?(t.data("order","DESC"),t.data("orderby","ID"),t.data("orderby_meta_key","")):"rating_desc"==n?(t.data("order","DESC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_wc_average_rating")):"price_asc"==n?(t.data("order","ASC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_price")):"price_desc"==n&&(t.data("order","DESC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_price")),d()}),S(document).find(".wrap-search-ajax .brw-search-ajax-result .ova-video-gallery").each(function(){S(this)}),S(document).find(".wrap-search-ajax .brw-search-ajax-result .ova-video-gallery").each(function(){S(this)})},ova_guestspicker:function(){function r(a,e,t="booking"){var r,i,o,n=a.closest(".ovabrw-wrapper-guestspicker").find('input[name="ovabrw_max_total_guest"]').val(),s=a.closest("form.booking-form"),d=a.closest("form.request-form"),l=a.closest(".guests-button").find('input[type="text"]'),c=l.val(),u=l.attr("min"),p=l.attr("max"),a=a.closest(".ovabrw-wrapper-guestspicker");if("sub"==e&&parseInt(c)>parseInt(u)&&(l.val(parseInt(c)-1),"booking"===t&&f.ova_ajax_show_total_after_load(s),"request"===t&&d.hasClass("request-form")&&f.ova_check_max_guests(d)),"sum"==e&&parseInt(c)<parseInt(p)){if(n)if(void 0!==(r=a.find(".ovabrw_adults").val())&&r||(r=0),void 0!==(i=a.find(".ovabrw_childrens").val())&&i||(i=0),void 0!==(o=a.find(".ovabrw_babies").val())&&o||(o=0),parseInt(r)+parseInt(i)+parseInt(o)>n-1)return;l.val(parseInt(c)+1),"booking"===t&&f.ova_ajax_show_total_after_load(s),"request"===t&&d.hasClass("request-form")&&f.ova_check_max_guests(d)}void 0!==(r=a.find(".ovabrw_adults").val())&&r||(r=0),void 0!==(i=a.find(".ovabrw_childrens").val())&&i||(i=0),void 0!==(o=a.find(".ovabrw_babies").val())&&o||(o=0);a=a.find(".gueststotal");a&&a.text(parseInt(r)+parseInt(i)+parseInt(o))}S("form.booking-form .ovabrw-wrapper-guestspicker").each(function(){var a=S(this),e=a.find(".ovabrw-guestspicker"),t=a.find(".ovabrw-guestspicker-content");e.on("click",function(){t.toggle()}),S(window).click(function(a){e.is(a.target)||0!==e.has(a.target).length||t.is(a.target)||0!==t.has(a.target).length||t.hide()}),a.find(".minus").on("click",function(){r(S(this),"sub","booking")}),a.find(".plus").on("click",function(){r(S(this),"sum","booking")})}),S("form.request-form .ovabrw-wrapper-guestspicker").each(function(){var a=S(this),e=a.find(".ovabrw-guestspicker"),t=a.find(".ovabrw-guestspicker-content");e.on("click",function(){t.toggle()}),S(window).click(function(a){e.is(a.target)||0!==e.has(a.target).length||t.is(a.target)||0!==t.has(a.target).length||t.hide()}),a.find(".minus").on("click",function(){r(S(this),"sub","request")}),a.find(".plus").on("click",function(){r(S(this),"sum","request")})})},ova_choose_time:function(){function a(a){var e,t,r,i,o,n,s,d,l;a&&(d=(e=a.closest("form")).find('input[name="qty-by-guests"]').val(),(n=a.val())&&(t=(s=n.split("|"))[0],r=s[1],a.closest("form").find(".ovabrw_start_date").val(t),a.closest("form").find(".ovabrw_end_date").val(r),d&&t&&r&&(i=e.find(".ovabrw-date-loading"),o=e.find('input[name="product_id"]').val(),n=e.find('input[name="ovabrw_adults"]').val(),s=e.find('input[name="ovabrw_childrens"]').val(),a=e.find('input[name="ovabrw_babies"]').val(),d=e.find('input[name="ovabrw_quantity"]').val(),l=e.find(".ajax-show-total .ajax-error"),i.show(),l.html("").hide(),S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_choose_time",check_in:t,check_out:r,product_id:o,adults:n,children:s,babies:a,quantity:d},success:function(a){a&&("error"in(a=JSON.parse(a))?(e.find("button.booking-form-submit").prop("disabled",!0),l.html("").append(a.error).show()):(e.find("button.booking-form-submit").prop("disabled",!1),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("max",a.max_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').attr("min",a.min_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_adults"]').val(a.val_adults),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("max",a.max_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').attr("min",a.min_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_childrens"]').val(a.val_children),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("max",a.max_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').attr("min",a.min_babies),e.find('.ovabrw-wrapper-guestspicker input[name="ovabrw_babies"]').val(a.val_babies),f.ova_guests_calculate(e),e.hasClass("booking-form")&&f.ova_ajax_show_total_after_load(e),e.hasClass("request-form")&&f.ova_check_max_guests(e))),i.hide()}}))))}S(".ovabrw_fixed_time").each(function(){a(S(this))}),S(".ovabrw_fixed_time").on("change",function(){a(S(this))})},ova_deposit:function(){S("form.booking-form .ovabrw-deposit .ovabrw-type-deposit").each(function(){"full"==S(this).find('input[name="ova_type_deposit"]:checked').val()?S(this).closest(".ovabrw-deposit").find(".title-deposite").hide():S(this).closest(".ovabrw-deposit").find(".title-deposite").show()}),S("form.booking-form .ovabrw-deposit .ovabrw-type-deposit").on("change",function(){"full"==S(this).find('input[name="ova_type_deposit"]:checked').val()?S(this).closest(".ovabrw-deposit").find(".title-deposite").hide():S(this).closest(".ovabrw-deposit").find(".title-deposite").show()})},ova_remove_from_cart:function(){function e(a=""){a&&S.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_remove_cart",cart_item_key:a},success:function(a){""!=a&&S(".ova-menu-cart").find(".cart-total .items").html(a)}})}S(document).on("click",".remove_from_cart_button",function(){e(S(this).data("cart_item_key"))}),S(document).on("click",".cart .product-remove a.remove",function(a){a.preventDefault();a=function(a=""){var e={};if(a&&""!==a.trim()){var t=document.createElement("a");t.href=a;for(var r=t.search.slice(1).split("&"),i=0;i<r.length;i++){var o=r[i].split("="),n=decodeURIComponent(o[0]),o=decodeURIComponent(o[1]||"");e[n]=o}}return e}(S(this).attr("href"));a.remove_item&&e(a.remove_item)})}};S(document).ready(function(){f.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,